JS - ajax запрос

https://ruseller.com/jquery.php?id=11



$.ajax({
  url: "test.html",
  context: document.body,
  success: function(){
    $(this).addClass("done");
  },
  // функция которая вызывается когда запрос завершается (после того как success или error обработчики будут вызваны)
  complete: function(){
  },
  
  
  success:function(data, textStatus, jqXHR)
  	data - 		данные, присланные сервером и уже прошедшие предварительную обработку (которая отлична для разных dataType)
	textStatus - 	строка со статусом выполнения
	jqXHR	-  	объект jqXHR
  
  POST
   $.ajax({
	url: "save-poster",
	data:{scrImg: scrImg},
	type:"post",
	success:function(data, textStatus, jqXHR){
	    //alert('success');
	},
	error:function(jqXHR, srtErr, errorThrown){
	    alert('error: '+srtErr+' errorThrown:'+errorThrown);
	}    
    });   
  
  
  // Функция вызывается если запрос закончится ошибкой.
  // Функция принимает три аргумента: 
  //	объект jqXHR (в jQuery 1.4.x, XMLHttpRequest)
  //	строка описывающая тип произошедшей ошибки
  //		возможные значения второго аргумента
  //			null, timeout, error, abort, parsererror
  //			timeout
  //	необязательный объект исключения, если он был вызван
  error:function(jqXHR, srtErr, errorThrown){alert('error: '+srtErr+' errorThrown:'+errorThrown);}
});   



data -		Данные, которые будут переданы на сервер

dataType - 	По умолчанию: автоматически определяемая строка (xml, json, script, или html)
			Тип данных, ожидаемых от сервера. 

type - 		По умолчанию: GET
			Определяет тип запроса GET или POST. 
			
url - 		По умолчанию: текущая страница.
			Страница, накоторую будет отправлен запрос.
			
			
ОШИБКИ 
	parsererror
		одним из вариантов этой ошибки может быть несоответствие типв возвращаеиых данных типу указанному в параметре dataType

// пример------------------------------------------
function parsResults(){
    $.ajax({
        url:'',
        data:'id_team=1',
        type:'POST',
        success:function(data, textStatus, jqXHR){
            
        },
        error:function(jqXHR, srtErr, errorThrown){
            // srtErr-строка описывающая тип произошедшей ошибки
            alert('error: '+srtErr+' errorThrown: '+errorThrown);
        }
    });
}
//=================================================
			
			
			
			
			
			
			
			
			
