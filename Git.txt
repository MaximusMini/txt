

Heron Michanikus
heronmichanikus@gmail.com

Установка имени и почты
	$ git config --global user.name "Heron Michanikus"
	$ git config --global user.email heronmichanikus@gmail.com
	
Проверка настроек
	git config --list
	
Проверка статуса проекта
	git status
	в случае отсутсвия репозитария выдаст
			fatal: Not a git repository (or any of the parent directories): .git
	
	
	
	https://github.com/MaximusMini/First_project
	
Создание нового GIT репозитория
	1	импорт в Git уже существующего проекта или каталога
		
		- Чтобы создать новый репозиторий, нам нужно открыть терминал, зайти в папку нашего проекта и выполнить команду init. Это включит приложение в этой конкретной папке и создаст скрытую директорию .git, где будет храниться история репозитория и настройки.
			$ mkdir Desktop/git_exercise/
			$ cd Desktop/git_exercise/
				$ cd c:/OpenServer/domains/KHL-stat2
			$ git init
				Командная строка должна вернуть что-то вроде:
				Initialized empty Git repository in /home/user/Desktop/git_exercise/.git/
					Это значит, что наш репозиторий был успешно создан, но пока что пуст.
		
	2	клонирование уже существующего репозитория с сервера
	
Определение состояния
	$ git status - 	показывает информацию о текущем состоянии репозитория: 
					актуальна ли информация на нём, нет ли чего-то нового, что поменялось, и так далее
		On branch master
		Initial commit
		Untracked files: - Сообщение говорит о том, что файлы .... неотслеживаемые
			....
		(use "git add ..." to include in what will be committed)
		hello.txt
		
		Changes to be committed: - Файл готов к коммиту
		
	После коммита команда git status не должна выводить ничего, если все изменения применены.
		
Добавление файлов для отслеживания
	$ git add hello.txt 	- добавить один файл из директории
	$ git add -A 			- добавить все, что находится в директории


Коммит(фиксация изменений)
	$ git commit -m "Initial commit."
		команда создаст новый коммит со всеми изменениями из области подготовки (добавление файла hello.txt)
		ключ -m и сообщение «Initial commit.» — это созданное пользователем описание всех изменений, включенных в коммит
		
Исключение файлов (папок) из отслеживания - https://proglib.io/p/git-for-half-an-hour/
	1.	Создайте вручную файл под названием .gitignore и сохраните его в директорию проекта.
	2.	Внутри файла перечислите названия файлов/папок, которые нужно игнорировать, каждый с новой строки.
	3.	Файл .gitignore должен быть добавлен, закоммичен и отправлен на сервер, как любой другой файл в проекте.

	Примеры файлов, которые нужно игнорировать:
		Логи
		Артефакты систем сборки
		Папки node_modules в проектах node.js
		Папки, созданные IDE, например, Netbeans или IntelliJ
		Разнообразные заметки разработчика.
		
	Файл .gitignore, исключающий все перечисленное выше, будет выглядеть так:
		*.log
		build/
		node_modules/
		.idea/
		my_notes.txt
	Символ слэша в конце некоторых линий означает директорию (и тот факт, что мы рекурсивно игнорируем все ее содержимое). 	
	Звездочка, как обычно, означает шаблон.






























		
	
	
	
	
